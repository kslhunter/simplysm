@mixin writeVars($value, $prevKey) {
  @if type-of($value) == map {
    @each $key, $val in $value {
      @if $prevKey == "" {
        @include writeVars($val, $key);
      } @else {
        @include writeVars($val, $prevKey + "-" + $key);
      }
    }
  } @else {
    --#{$prevKey}: #{$value};
  }
}

@mixin elevation($value) {
  @if $value == none or $value == 0 {
    box-shadow: none;
  } @else {
    /*body.sd-theme-compact & {
      box-shadow: 0 0 2px rgba(0, 0, 0, .05), 0 calc(#{$value} * var(--elevation-size)) calc(#{$value} * 2 * var(--elevation-size)) rgba(0, 0, 0, .1);
    }
    body.sd-theme-modern &,
    body.sd-theme-kiosk &,
    body.sd-theme-mobile & {
      box-shadow: 0 0 2px rgba(0, 0, 0, .05), 0 calc(#{$value} * var(--elevation-size)) calc(#{$value} * 4 * var(--elevation-size)) rgba(0, 0, 0, .05);
    }*/
    /*box-shadow:
      0 0 2px rgba(0, 0, 0, 0.05),
      0 calc(#{$value} * var(--elevation-size)) calc(#{$value} * 4 * var(--elevation-size)) rgba(0, 0, 0, 0.05);*/
    box-shadow:
      0 0 2px rgba(0, 0, 0, 0.05),
      0 calc(#{$value} * var(--elevation-size)) calc(#{$value} * 4 * var(--elevation-size)) rgba(0, 0, 0, 0.05);
  }
}

@mixin form-control-base() {
  display: block;
  width: 100%;
  padding: var(--gap-sm) var(--gap-default);
  border: 1px solid transparent;

  font-size: var(--font-size-default);
  font-family: var(--font-family);
  line-height: var(--line-height);

  color: var(--text-trans-default);
}

@mixin help() {
  text-decoration-line: underline;
  text-decoration-style: dotted;
  cursor: help;
}

@mixin active-effect($use) {
  @if $use == false {
    &:after {
      display: none;
    }
  } @else {
    position: relative;
    overflow: hidden;
    vertical-align: top;

    &:after {
      content: "";
      display: block;
      position: absolute;
      width: 120%;
      height: 300%;
      border-radius: 100%;
      left: -10%;
      top: -100%;
      background: transparent;
      transition-property: transform, opacity;
      transition-duration: 0.3s;
      transition-timing-function: ease-out;
      transform: scaleX(0.3);
      opacity: 0;

      pointer-events: none;
    }

    &:active {
      &:after {
        background: var(--trans-light);
        transform: none;
        opacity: 1;
      }
    }
  }
}
