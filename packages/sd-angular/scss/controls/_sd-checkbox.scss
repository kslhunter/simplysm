sd-checkbox {
  $size: floor(strip-unit($line-height) * get($font-size, default));

  color: get($text-color, default);

  > label {
    @include form-control-base();
    color: inherit;
    cursor: pointer;
    position: relative;

    > ._indicator_rect {
      position: absolute;
      display: block;
      width: $size;
      height: $size;
      border: 1px solid get($trans-color, default);
      vertical-align: top;
      transition: border-color .1s linear;
      background: get($theme-color, secondary, lightest);
    }

    > ._indicator {
      display: inline-block;
      position: relative;
      opacity: 0;
      transition: opacity .1s linear;
      color: get($text-color, default);
      width: $size;
      height: $size;
      vertical-align: top;
      //font-size: 16px;
      font-size: get($font-size, default);
      //margin-left: -1px;
      text-indent: 1px;
    }

    > ._content {
      display: inline-block;
      vertical-align: top;
      //text-indent: get($gap, xs);
      text-indent: get($gap, sm);
      > * {
        text-indent: 0;
      }
    }

    > input:disabled + ._indicator_rect {
      //background: $bg-color !important;
      background: get($theme-color, grey, lightest) !important;
    }

    &:focus {
      outline-color: transparent;

      > ._indicator_rect {
        border-color: get($theme-color, primary, default);
      }
    }
  }

  &[sd-checked=true] {
    > label {
      > ._indicator {
        opacity: 1;
      }
    }
  }

  &[sd-inline=true] {
    display: inline-block;

    > label {
      padding-left: 0;
    }
  }

  &[sd-radio=true] {
    > label {
      > ._indicator_rect {
        border-radius: 100%;
      }

      > ._indicator {
        padding: get($gap, xs);
      }

      > ._indicator > div {
        border-radius: 100%;
        background: get($text-color, default);
        width: 100%;
        height: 100%;
      }
    }
  }

  &[sd-size=sm] > label {
    padding: get($gap, xs) get($gap, sm);
  }

  &[sd-size=lg] > label {
    padding: get($gap, default) get($gap, lg);
  }

  @each $key, $val in $theme-color {
    &[sd-theme=#{$key}] > label {
      > ._indicator_rect {
        background: get($val, lightest);
      }

      > ._indicator {
        color: get($val, default);
      }

      &:focus {
        > ._indicator_rect {
          border-color: get($val, default);
        }
      }
    }
  }
}
