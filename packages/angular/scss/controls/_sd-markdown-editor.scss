sd-markdown-editor {
  display: block;
  border: 1px solid get($trans-color, default);

  > sd-dock-container {
    > ._toolbar {
      user-select: none;

      > a {
        display: inline-block;
        padding: get($gap, sm) 0;
        text-align: center;
        width: get($gap, sm) * 2 + strip-unit($line-height) * get($font-size, default);

        &:hover {
          background: rgba(0, 0, 0, .05);
        }

        &._selected {
          background: get($theme-color, primary, default);
          color: get($text-reverse-color, default);
        }
      }
    }

    > sd-pane > ._editor {
      position: relative;
      width: 100%;
      height: 100%;

      > textarea {
        @include form-control-base();
        height: 100%;
        background: get($theme-color, info, lightest);
        border: none;
        transition: outline-color .1s linear;
        outline: 1px solid transparent;
        outline-offset: -1px;

        &::-webkit-input-placeholder {
          color: get($text-color, lighter);
        }

        &:focus {
          outline-color: get($theme-color, primary, default);
        }

        > ._invalid-indicator {
          display: none;
        }

        > input[sd-invalid=true] + ._invalid-indicator,
        > input:invalid + ._invalid-indicator {
          @include invalid-indicator();
        }
      }

      > ._dragover {
        display: none;
        pointer-events: none;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, .05);
        font-size: get($font-size, h1);
        color: rgba(0, 0, 0, .3);
        text-align: center;
        padding-top: 20px;
      }
    }

    > sd-pane > ._preview {
      padding: get($gap, sm);
      height: 100%;
      overflow: auto;
      background: white;

      ol {
        padding-left: 20px;
      }

      code {
        background: rgba(0, 0, 0, .05);
        border-radius: 2px;
      }

      pre {
        background: rgba(0, 0, 0, .05);
        padding: get($gap, sm) get($gap, default);
        border-radius: 2px;
        white-space: pre-wrap;

        > code {
          background: transparent;
        }
      }

      p {
        margin-top: get($gap, sm);
        margin-bottom: get($gap, sm);
      }
    }
  }

  &[sd-disabled=true] {
    > sd-dock-container {
      > sd-pane > ._preview {
        height: auto;
      }
    }
  }

  &[sd-dragover=true] {
    > sd-dock-container > sd-pane > ._editor > ._dragover {
      display: block;
    }
  }
}
