import { ArgumentError } from "../errors/ArgumentError";
import { DateTimeFormatUtil } from "../utils/DateTimeFormatUtil";
export class DateOnly {
    constructor(arg1, arg2, arg3) {
        if (arg1 === undefined) {
            const tick = Date.now();
            const date = new Date(tick);
            this.date = new Date(date.getFullYear(), date.getMonth(), date.getDate());
        }
        else if (arg2 !== undefined && arg3 !== undefined) {
            this.date = new Date(arg1, arg2 - 1, arg3);
        }
        else if (arg1 instanceof Date) {
            this.date = arg1;
        }
        else {
            const date = new Date(arg1);
            this.date = new Date(date.getFullYear(), date.getMonth(), date.getDate());
        }
    }
    static parse(str) {
        const offsetMinutes = new Date().getTimezoneOffset();
        const parsedTick = Date.parse(str) - (offsetMinutes * 60 * 1000);
        if (!Number.isNaN(parsedTick)) {
            return new DateOnly(parsedTick);
        }
        const match1 = (/^[0-9]{8}$/).exec(str);
        if (match1 != null) {
            return new DateOnly(Number(str.substr(0, 4)), Number(str.substr(4, 2)), Number(str.substr(6, 2)));
        }
        throw new ArgumentError({ str });
    }
    static getByMonthWeekFirstDate(month, week, offsetWeek = 4, startWeek = 1) {
        // 이달 1일
        const monthFirstDate = month.setDay(1);
        // 이달 1일의 요일
        const monthFirstDayWeek = monthFirstDate.week;
        // 이달의 주차가 시작되는 날짜
        const monthWeekNumStartDate = monthFirstDayWeek <= offsetWeek ? monthFirstDate : monthFirstDate.setDay(7 - monthFirstDayWeek + 1 + startWeek);
        return monthWeekNumStartDate.addDays(7 * (week > 0 ? week - 1 : week));
    }
    /**
     * 특정 날짜의 월별주차 가져오기
     * - 일: 0, 월: 1, 화: 2, 수: 3, 목: 4, 금: 5, 토: 6
     * @param {DateOnly} date 확인날짜
     * @param {number} offsetWeek 이 요일이 포함된 월의 주차로 인식됨 (기본값: 4=목요일)
     * @param {number} startWeek 이 요일을 시작요일로 봄 (기본값: 1=월요일)
     * @returns {{month: DateOnly; week: number}}
     */
    static getWeekOfMonth(date, offsetWeek = 4, startWeek = 1) {
        // 일: 0, 월: 1, 화: 2, 수: 3, 목: 4, 금: 5, 토: 6
        // 이번달의 주차가 시작되는 날짜
        const monthWeekNumStartDate = DateOnly.getByMonthWeekFirstDate(date.setDay(1), 1, offsetWeek, startWeek);
        // 다음달의 주차가 시작되는 날짜
        const nextMonthWeekNumStartDate = DateOnly.getByMonthWeekFirstDate(date.setDay(1).addMonths(1), 1, offsetWeek, startWeek);
        // 이번달의 주차가 끝나는 날짜
        const monthWeekNumEndDate = nextMonthWeekNumStartDate.day !== 1
            ? date.addMonths(1).addDays(-1)
            : nextMonthWeekNumStartDate.addDays(-nextMonthWeekNumStartDate.week - 1 + startWeek);
        if (date.tick < monthWeekNumStartDate.tick) {
            return DateOnly.getWeekOfMonth(date.setDay(1).addDays(-1), offsetWeek, startWeek);
        }
        else if (date.tick > monthWeekNumEndDate.tick) {
            return DateOnly.getWeekOfMonth(date.addMonths(1).setDay(1), offsetWeek, startWeek);
        }
        else {
            // 1주차의 첫날짜 (전달일 수 있음)
            const firstWeekNumFirstDate = monthWeekNumStartDate.addDays(-monthWeekNumStartDate.week + 1);
            // 1주차 첫날짜에서 지난 날수
            const spanDayFromWeekStartDate = Math.floor(((date.tick - firstWeekNumFirstDate.tick) / (24 * 60 * 60 * 1000)));
            // 1주차 첫날짜에서 지난 주차수
            const spanWeekFromWeekStartDate = Math.floor(spanDayFromWeekStartDate / 7);
            return {
                month: date.setDay(1),
                weekNum: spanWeekFromWeekStartDate + 1,
                startDate: date.addDays(-date.week + startWeek),
                endDate: date.addDays(-date.week + startWeek + 6)
            };
        }
    }
    get isValidDate() {
        // noinspection SuspiciousTypeOfGuard
        return this.date instanceof Date && !isNaN(this.date);
    }
    get year() {
        return this.date.getFullYear();
    }
    set year(value) {
        this.date.setFullYear(value);
    }
    get month() {
        return this.date.getMonth() + 1;
    }
    set month(value) {
        this.date.setMonth(value - 1);
    }
    get day() {
        return this.date.getDate();
    }
    set day(value) {
        this.date.setDate(value);
    }
    get tick() {
        return this.date.getTime();
    }
    set tick(tick) {
        this.date.setTime(tick - (tick % (24 * 60 * 60 * 1000)));
    }
    get week() {
        return this.date.getDay();
    }
    setYear(year) {
        return new DateOnly(new Date(this.tick).setFullYear(year));
    }
    setMonth(month) {
        const date = new Date(this.tick);
        date.setDate(1);
        date.setMonth(month);
        date.setDate(0);
        const lastDay = date.getDate();
        const currentDay = lastDay < this.day ? lastDay : this.day;
        date.setDate(currentDay);
        return new DateOnly(date);
    }
    setDay(day) {
        return new DateOnly(new Date(this.tick).setDate(day));
    }
    addYears(years) {
        return this.setYear(this.year + years);
    }
    addMonths(months) {
        return this.setMonth(this.month + months);
    }
    addDays(days) {
        return this.setDay(this.day + days);
    }
    toFormatString(format) {
        return DateTimeFormatUtil.format(format, {
            year: this.year,
            month: this.month,
            day: this.day
        });
    }
    toString() {
        return this.toFormatString("yyyy-MM-dd");
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0ZU9ubHkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdHlwZXMvRGF0ZU9ubHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRWpFLE1BQU0sT0FBTyxRQUFRO0lBT25CLFlBQW1CLElBQW9CLEVBQUUsSUFBYSxFQUFFLElBQWE7UUFDbkUsSUFBSSxJQUFJLEtBQUssU0FBUyxFQUFFO1lBQ3RCLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUN4QixNQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM1QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7U0FDM0U7YUFDSSxJQUFJLElBQUksS0FBSyxTQUFTLElBQUksSUFBSSxLQUFLLFNBQVMsRUFBRTtZQUNqRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQWMsRUFBRSxJQUFJLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3REO2FBQ0ksSUFBSSxJQUFJLFlBQVksSUFBSSxFQUFFO1lBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1NBQ2xCO2FBQ0k7WUFDSCxNQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM1QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFD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